AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  AvailabilityZone1:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: First preferred availability zone.

  AvailabilityZone2:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Second preferred availability zone.

Resources:

  #
  # VPC
  #

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      # A CIDR block of 10.0.0.0/22 will give you the IP range
      # 10.0.0.0 - 10.0.3.255
      CidrBlock: 10.0.0.0/22
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - vpc
                - !Ref AWS::StackName

  #
  # INTERNET GATEWAY
  #

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - ig
                - !Ref AWS::StackName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC

  #
  # SUBNETS
  #

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AvailabilityZone1
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - public-subnet-1
                - !Ref AWS::StackName
      VpcId:
        Ref: VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AvailabilityZone2
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - public-subnet-2
                - !Ref AWS::StackName
      VpcId:
        Ref: VPC

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AvailabilityZone1
      CidrBlock: 10.0.2.0/24
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - private-subnet-1
                - !Ref AWS::StackName
      VpcId:
        Ref: VPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AvailabilityZone2
      CidrBlock: 10.0.3.0/24
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - private-subnet-2
                - !Ref AWS::StackName
      VpcId:
        Ref: VPC

  #
  # NAT GATEWAY
  #

  NATElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    Properties:
      Domain: vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NATElasticIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1

  #
  # ROUTE TABLES
  #

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - rt-public
                - !Ref AWS::StackName

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - rt-private
                - !Ref AWS::StackName

  #
  # EGRESS ROUTES
  #

  PublicSubnetRouteToInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable

  PrivateSubnetRouteToNATGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
      RouteTableId:
        Ref: PrivateRouteTable

  #
  # SUBNET ROUTING
  #

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet2
